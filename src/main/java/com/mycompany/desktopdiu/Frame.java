/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.desktopdiu;

import java.awt.Point;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.highgui.HighGui;
import org.opencv.imgcodecs.Imgcodecs;

public class Frame extends javax.swing.JFrame {

    JFileChooser fc = new JFileChooser();
    FileNameExtensionFilter filtro = new FileNameExtensionFilter("Imagen", "jpg", "png");
    Mat img = null;
   
    public Frame() {
        nu.pattern.OpenCV.loadShared();
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktop = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        mFile = new javax.swing.JMenu();
        mOpen = new javax.swing.JMenuItem();
        mEdit = new javax.swing.JMenu();
        mTreshold = new javax.swing.JMenuItem();
        mHelp = new javax.swing.JMenu();
        mAbout = new javax.swing.JMenuItem();
        mExit = new javax.swing.JMenu();
        Exit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Umbralizador de Imágenes Marca ACME V2.0.8 Alejandro García Sosa Santiago Higuita Ardila");
        setPreferredSize(new java.awt.Dimension(720, 480));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        desktop.setPreferredSize(new java.awt.Dimension(768, 1024));

        javax.swing.GroupLayout desktopLayout = new javax.swing.GroupLayout(desktop);
        desktop.setLayout(desktopLayout);
        desktopLayout.setHorizontalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 603, Short.MAX_VALUE)
        );
        desktopLayout.setVerticalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 316, Short.MAX_VALUE)
        );

        mFile.setText("File");

        mOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mOpen.setText("Open Image");
        mOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mOpenActionPerformed(evt);
            }
        });
        mFile.add(mOpen);

        jMenuBar1.add(mFile);

        mEdit.setText("Edit");

        mTreshold.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mTreshold.setText("Set Treshold");
        mTreshold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mTresholdActionPerformed(evt);
            }
        });
        mEdit.add(mTreshold);

        jMenuBar1.add(mEdit);

        mHelp.setText("Help");

        mAbout.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        mAbout.setText("About");
        mAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mAboutActionPerformed(evt);
            }
        });
        mHelp.add(mAbout);

        jMenuBar1.add(mHelp);

        mExit.setText("Exit");

        Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        mExit.add(Exit);

        jMenuBar1.add(mExit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mOpenActionPerformed
        fc.setFileFilter(filtro);
        int res = fc.showOpenDialog(null);
        if(res == JFileChooser.APPROVE_OPTION){
            JInternalFrame[] wind = desktop.getAllFrames();
            for (JInternalFrame frame : wind){
                frame.dispose();
            }
            File fichero = fc.getSelectedFile();
            String name = fichero.getName();
            String ex = name.substring(name.lastIndexOf("."));
            if (ex.contains("jpg") || ex.contains("png")){
                img = Imgcodecs.imread(fichero.getAbsolutePath());
                InternalWindow imageC = new InternalWindow((BufferedImage) HighGui.toBufferedImage(img));
                imageC.setTitle(fichero.getAbsolutePath());
                desktop.add(imageC);
                imageC.setVisible(true);
            }else{
                JOptionPane.showMessageDialog(this, "Formato de archivo no válido\nFormatos válidos:\n.jpg .png", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            
            
        }
    }//GEN-LAST:event_mOpenActionPerformed

    private void mTresholdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mTresholdActionPerformed
        if(img == null){
            JOptionPane.showMessageDialog(this, "No ha seleccionado imagen", "ERROR", JOptionPane.ERROR_MESSAGE);
        }else{
            try{
                int treshold = Integer.parseInt(JOptionPane.showInputDialog(this,"Introduzca un número entero"));
                InternalWindow imageC = new InternalWindow((BufferedImage) HighGui.toBufferedImage(Umbralizador.umbralizar(img, treshold)));
                imageC.setTitle(""+treshold);
            desktop.add(imageC);
            //imageC.pack();
            imageC.setVisible(true);
            }catch(NumberFormatException E){
                JOptionPane.showMessageDialog(this, "Introduzca un número entero", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_mTresholdActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
        JInternalFrame[] wind = desktop.getAllFrames();
            for (JInternalFrame frame : wind){
                if(frame.getLocation().getX() > desktop.getWidth()){
                    frame.setLocation(new Point(desktop.getWidth()-10, (int) frame.getLocation().getY()));
                }
                if(frame.getLocation().getY() > desktop.getHeight()){
                    frame.setLocation(new Point((int) frame.getLocation().getY(),desktop.getHeight()-10));
                }
            }
    }//GEN-LAST:event_formComponentResized

    private void mAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mAboutActionPerformed
        String help[] = {"Elegir Imagen", "Elegir umbral", "Salir de la aplicación", "Lista de atajos", "Sobre nosotros"};
        JComboBox jHelp = new JComboBox(help);
        boolean lo = true;
        int res;
        while(lo){
            res = JOptionPane.showConfirmDialog( null, jHelp, "Acerca de", JOptionPane.OK_CANCEL_OPTION);
            if(res == JOptionPane.OK_OPTION){
                switch(jHelp.getSelectedIndex()){
                case 0: JOptionPane.showMessageDialog(this, "Para elegir una imagen, use la opción 'Open Image' del menú 'File'.\nPuedes cambiar de imagen en cualquier momento.\nCuando abras una nueva imagen, todas las ventanas abiertas se cerrarán.");
                    break;
                case 1: JOptionPane.showMessageDialog(this, "Para cambiar el umbral, use el opción 'Set Treshold' del menú 'Edit'.\nPuedes cambiar el umbral tantas veces como quieras.\nCada umbral se mostrará en una ventana diferente.");
                    break;
                case 2: JOptionPane.showMessageDialog(this, "Para salir, use la opción 'Exit' del menú 'Exit'.\nUsar la 'X' está desactivado");
                    break;
                case 3: JOptionPane.showMessageDialog(this, "Abrir imágen: 'Ctrl+O'\nModificar umbral: 'Ctrl+E'\nAbrir la ayuda: 'Ctrl+H'\nSalir de la aplicación: 'Ctrl+Shift+E'");
                    break;
                case 4: JOptionPane.showMessageDialog(this, "Umbralizador de imágenes marca ACME\nVersión 2.0.8\n\nHecho por:\nAlejandro García Sosa\nSantiago Higuita Ardila");
                    break;
                default: JOptionPane.showMessageDialog(this, "Ayuda no disponible\nDicho sea de paso, ¿Cómo es posible que estés viendo esto?", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                lo = false;
            }
            
        }
    }//GEN-LAST:event_mAboutActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        int ex = JOptionPane.showConfirmDialog(this, "¿Desea cerrar la aplicación?", "EXIT", JOptionPane.YES_NO_OPTION);
        if(ex == JOptionPane.YES_OPTION){
            this.dispose();
        }
    }//GEN-LAST:event_ExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Exit;
    private javax.swing.JDesktopPane desktop;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem mAbout;
    private javax.swing.JMenu mEdit;
    private javax.swing.JMenu mExit;
    private javax.swing.JMenu mFile;
    private javax.swing.JMenu mHelp;
    private javax.swing.JMenuItem mOpen;
    private javax.swing.JMenuItem mTreshold;
    // End of variables declaration//GEN-END:variables
}
